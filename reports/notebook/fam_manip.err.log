Traceback (most recent call last):
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ud_min, ud_max = -1, 0  # LIGNE A MODIFIER. Le programme cherchera la valeur seuil dans l'intervale.

def eval_ud(u, i, ud_min, ud_max):
    """Fonction qui Ã©value la tension seuil la plus adaptÃ©e au tracÃ© expÃ©rimental. NE PAS MODIFIER
    u : Vecteur contenu les mesures de tension
    i : Vecteur contenu les mesures d'intensitÃ©
    ud_min, ud_max : Flottant dÃ©limitant l'intervalle dans lequel on recherche UD

    Renvoie : un flottant correspondant Ã  la valeur de ud optimale
    """
    N = 1000  # Nombre de valeur de ud qui seront testÃ©e entre 0 et 1 V
    n = len(u)
    ud = np.linspace(ud_min, ud_max, N)  # Valeurs de ud testÃ©es
    dud = np.zeros(N)  # On stocke l'estimateur qui permettra de dÃ©cider quelle valeur de ud est la meilleure
    for k in range(N):  # Calcul de l'estimateur
        ds = 0
        for j in range(n):
            d = min(abs(u[j]-ud[k]), i[j])
            ds = ds + d ** 2
        dud[k] = ds
    return ud[np.argmin(dud)]

"""Ecrire ci-dessous l'instruction qui va enregistrer dans la variable ud_estim l'estimation de ud
avec la mÃ©thode prÃ©cdente"""
ud_estim = 0  # LIGNE A MODIFIER en appelant eval_ud


"""Ajout du modÃ¨le sur le graphique.
"""
f,ax = plt.subplots()
f.suptitle("Mettre un titre")
ax.set_xlabel("LÃ©gender les X")
ax.set_ylabel("LÃ©gender les Y")
ax.errorbar(u, i, xerr=uu, yerr=ui, label="LÃ©gender la courbe", linestyle="", color="black")
ax.plot([-min(u), ud_estim, ud_estim], [0, 0, max(i)], label="LÃ©gender la courbe", linestyle="-",color="red")
ax.grid()
ax.legend()
plt.show()


"""La commande ci-aprÃ¨s permettra de sauvegarder le graphique dans un fichier image
(dans le rÃ©pertoire oÃ¹ se trouve le notebook). Vous pourrez l'insÃ©rer dans votre compte-rendu.
"""
f.savefig("caracteristique_diode.png")
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[2], line 35[0m
[0;32m     33[0m ax[38;5;241m.[39mset_ylabel([38;5;124m"[39m[38;5;124mLÃ©gender les Y[39m[38;5;124m"[39m)
[0;32m     34[0m ax[38;5;241m.[39merrorbar(u, i, xerr[38;5;241m=[39muu, yerr[38;5;241m=[39mui, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mLÃ©gender la courbe[39m[38;5;124m"[39m, linestyle[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m, color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m)
[1;32m---> 35[0m ax[38;5;241m.[39mplot([[38;5;241m-[39m[38;5;28mmin[39m(u), ud_estim, ud_estim], [[38;5;241m0[39m, [38;5;241m0[39m, [38;5;28mmax[39m(i)], label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mLÃ©gender la courbe[39m[38;5;124m"[39m, linestyle[38;5;241m=[39m[38;5;124m"[39m[38;5;124m-[39m[38;5;124m"[39m,color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mred[39m[38;5;124m"[39m)
[0;32m     36[0m ax[38;5;241m.[39mgrid()
[0;32m     37[0m ax[38;5;241m.[39mlegend()

[1;31mValueError[0m: min() arg is an empty sequence
ValueError: min() arg is an empty sequence

